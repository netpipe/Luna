import irr
import physics
#if (EXTRAS)
import extras
import scene
import input
#import sound
#import luna
import net
import gui

#import itertools
#not needed includes just for testing
scene.using ('./media/string.py',"1");
#scene.using ('../media/lib/python-skeletons/sys.py',"1");
#scene.using ('../media/lib/python-skeletons/math.py',"1");
#scene.using ('../media/lib/python2.7/os.py',"1");


import os
import itertools
import hashlib
#import random
import math
import time
#import shuffle

#scene.using ('../media/lib/python2.7/random.py',"1"); #not working

ticks = time.time()
#https://stackoverflow.com/questions/10930386/alternative-for-random-module-in-python
class myrandom:
    kz=36969
    kw=18000
    k3=65535
    maxz=kz*k3+(2<<16)
    maxw=kw*k3+(2<<16)
    max=(maxz<<16 )+maxw
    # Optionally initiate with different seed. Two numbers below 2<<16
    def __init__(self,z=123456789,w=98764321):
        self.m_w = w
        self.m_z = z
    def step(self):
        self.m_z = self.kz * (self.m_z & self.k3) + (self.m_z >> 16)
        self.m_w = self.kw * (self.m_w & self.k3) + (self.m_w >> 16)
    def get(self):
        self.step()
        return (self.m_z << 16) + self.m_w
    def time_reseed(self):
        # yes, sure, move out import if you like to
        import time
        t=int(time.time())
        # completely made up way to got two new numbers below 2<<16
        self.m_z = (self.m_z+(t*34567891011)) & ((2<<16)-1)
        self.m_w = (self.m_w+(t*10987654321)) & ((2<<16)-1)
        self.step()
    def getuniform(self):
        return self.get()*1.0/self.max

myr=myrandom()

def shuffle(x, random=None):
        """x, random=random.random -> shuffle list x in place; return None.

        Optional arg random is a 0-argument function returning a random
        float in [0.0, 1.0); by default, the standard random.random.

        """

       # if random is None:
       #     random = self.random
        _int = int
        for i in reversed(xrange(1, len(x))):
            # pick an element in x[:i+1] with which to exchange x[i]
            j = int(myr.getuniform() * (i+1))
            x[i], x[j] = x[j], x[i]
            print j



#irr.checkKeyState(); # check event loop to see if any key was pressed
#################################
#INITIALIZE
#called externally so it is set from functions.py or init.py
if (init) :
#################################
 scene.CSG("test.3ds")
# sound.soundman(1,0,1,1)
 camera = scene.addCamera(3,0,20,0) # 1 regular , 2 FPS , 3 fps-with keymap other types, 4 rpg, << todo types  / active / vector
 #physics.fpsweapon(camera)
 Light1 = scene.Light(10,100,150,1,"111111") # type , vector, color
 model = "media/models/vehicles/oldChevy-Truck.3ds"
 texture = "media/models/vehicles/oldChevy.bmp"
 terrain = scene.addTerrain(1,-100,-103,-100,5,1,5,"media/terrain-heightmap.bmp","media/terrain.png","media/detailmap.jpg") # load last to make the physics work FIX  // possibly a load terrain xml function
# scene.setPosition(terrain,4,-111,-20,22)
 car1 = physics.addCar(model,texture, 3.0,1.0, 1.5,1.5,2.5,  1.5,1.5,1.4, 1.0,1.0,10,         500,100.0,2200,20.0,     0,-0.03,6.0,0.0,0.7,   -0.01,100.0,0.8,0.6,0.1,0.45,    2.0, 0.3, 2.0)
 car2 = physics.addCar(model,texture, 1.0,1.0, 1.5,1.5,2.5,  1.5,1.5,1.4, 1.0,1.0,1.0,         500,100.0,2200,20.0,     0,-0.03,6.0,0.0,0.7,   -0.01,100.0,0.8,0.6,0.1,0.45,    2.0, 0.3, 1.0)
 physics.VehicleParams(car2,0,0,0,0,0) #reset position
 physics.VehicleParams(car2,11,0,20,100,20) #position
 physics.VehicleParams(car1,8,0,0,0,0)
 irr.files("media/cards.zip")

# physics.addHelicopter("data/models/vehicles/chopper/Helicopter 2.obj",1,1,1) # type, physical properties - speed , weight etc..


 #scene.addwater("none",1,0.5,4,0.5) #speed,refractionfactor,height,isplacement, todo x,y,z
 #gui.codeeditor(1) #shader editor #cpu limiter incase of bad code
# extras.lensflare(1,10,100,10)
# scene.flag1("media/Flags/agnostechdemo1200912132.png",10,100,10)
# extras.blindboids(1,0,1,1)
# gui.sgraph()
# healthbar=gui.bar(0,0,20,40,100,60)

# if (0) : # can only be client or server
#  if (1) :
#   netman = net.connect()
#   net.update(netman)
#   net.send(netman,"shit yeah")
#   net.update(netman)
#  else :
#   netserver = net.server()
#   net.update(netserver)
 #physics.addHelicopter("data/models/vehicles/chopper/Helicopter 2.obj",1,1,1) # type, physical properties - speed , weight etc..
  # scene.sleep(1000)
#gui.bar(healthbar,1,20,40,200,60) #does not draw onanimate it

 #jungle = scene.addJungle()
 #scene.addTree("jungle",1,terrain,1,1,1)
 #track1 = scene.loadTrack('./data/3/huge.3ds',20,0,0)  # trackname , timeofday , lighting , track slot/stages
 #track1 = scene.loadLevel('extra/maps/urban.bsp',0,0,0)  # trackname , timeofday , lighting , track slot/stages
# scene.setPosition(terrain ,4, -100,-10,-100)
 #scene.exportScene("/home/clay/test/scene.irr")
 #stage = scene.loadTrack('./data/Stage3/Stage3.irr',20,0,0)
 #stage = scene.loadTrack('./StageData/irrb2/Hospital.irr',20,0,0)
# table = scene.loadTrack('../media/table_football.3ds',20,0,0)
# scene.setPosition(table ,1, 10,-50,10)

 #sphere1 = scene.addSphereNode("data/textures/material/marble1_256.png",0,-1000,0, 5,5)
 #scene.setVelocity(sphere1,10,10,10)
 #scene.setPosition(sphere1 ,1, 10,100,10)
#should be able to add trees without terrain/orientation
#scene.trees(terr,bush)
#scene.addTree2(bush)

#for(u32 i = 0 ; i < 1000 ; i++)
# {
 # f32 cx = 100.0f + rand()%10040;
#  f32 cy = 100.0f + rand()%10040;
 # int type = rand()%8+1;
#  int seed = rand();
#################################
#INIT CODE
#################################
 iaxe = image.iadd("./media/axe.jpg",10,10,500,500,10,10,800,800)
 i=0

 #x1,y1,x2,y2,xx1,yy1,xx2,yy2;
 iaxe2 = image.iadd("./media/axe.jpg",40,40,500,500,10,10,800,800)
 i=0
# make a deck of cards
 deck = list(itertools.product(range(1,14),['Spade','Heart','Diamond','Club']))

# shuffle the cards
 shuffle(deck)

# draw five cards
 print("You got:")
 for i in range(5):
   print(deck[i][0], "of", deck[i][1])

  # deck[i][0]deck[i][1]

   #1Spade
   #1Heart
   #1Diamond
   #1Clubs



#################################
 init = 0 #initialization finish - needs whitespace infront
#################################
#MAIN LOOP

#irr.delete(iaxe)
#iaxe = image.iadd("../media/axe.jpg",10,10,500,500,10,10,800,800)
image.irotate(iaxe,i)
i+=1
image.idraw(iaxe)
image.idraw(iaxe2)

#if input.getKey('KEY_ESCAPE') :
# paused=1
# irr.exit()
physics.VehicleParams(car1,8,0,0,0,0)
physics.VehicleParams(car2,8,0,0,0,0)

#physics.VehicleParams(car1,0,0,0,0,0)

#time
ticks = time.time()
#print "Number of ticks since 12:00am, January 1, 1970:", ticks

#myr=myrandom()
#print [myr.getuniform() for x in range(20)]

#print random variable set to make 0 or 1's semi randomly  remove /80 to get larger randoms
#print int(str(ticks-int(ticks))[2:])%100/80 #Keeping only the numbers after the decimal point, otherwise you would get the same "random" number each second



if input.getKey('KEY_F2') : #could have a release action
 print "setting cube position"
 #scene.add_cube()
 scene.addSphereNode("data/textures/material/marble1_256.png",0,20,5,5,500) #xyz radius mass
 #scene.setPosition(cube_id,1,1,1)
irr.delay(0.1);


scene.using ('./media/keys.pys',"1");

#irr.update(); #could set timing here, maybe smgr gui  etc  todo



