########## GAME COMPLETE ISSUES LEFT(OR TODO ): NEEDS BLACK FONT(TEXT IS PLACED WHERE IT SHOULD BE BUT NOT VISIBLE)
##############################################  RANDOM.PY HAS NO TIME SEED, SO RANDOM IS NOT RANDOM

############initialization
if(init):
 import irr
 import scene
 import input
 import image
 import time


 scene.using ('../media/random.py',"1");
 id =100
 uiTimer=0
 uiState=0
 dotState=0
 determined=0
 winState=0
 iconChoice=[]
 iconOrder=0
 recovered=1
 font="../media/fontlucida.png"
 location= "../media/PirateSlotMachine/"

 def newId():
  global id
  id+=1
  return id

 myr.time_reseed();

 camera = scene.addCamera(1, 0,0,0)
 scene.decals(1,camera)
 Light1 = scene.Light(10,0,100,0,"111111")


 ###################load textures
 textures=[]
 for i in range(5):
  textures.append(image.load_texture(location+str(i+1)+"-p.png"))
 slotTexture= image.load_texture(location+"slot.png")
 whiteColor= image.load_texture(location+"white.png")
 dotTexture=image.load_texture(location+"dot.png")

 ################add game objects
 slots=[]
 icons=[]
 for i in range(3):
  slots.append(scene.add_cube(newId(),72, -64+(i*64),32,105, 0,0,0, 0.47,1,0.01))
  image.set_texture(slots[i],slotTexture)
 print("slots")
 for i in range(5):
  icons.append(scene.add_cube(newId(),16, -48+(i*24),32-(16*i),90, 0,0,0, 1,1,0.01))
  image.set_texture(icons[i],textures[i])
 print("icons")

 #white= scene.add_cube(newId(),256, 0,0,95, 0,0,0, 1,0.75,0.00001)
 #print("white")
 dot=scene.add_cube(newId(),2, -2400,-8,97.5, 0,0,0, 1,1,0.01)
 image.set_texture(dot,dotTexture)
 print("dot")
 init=0

###############initialization over

###############game loop
irr.delay(20000)

uiTimer+=1
if(uiTimer>20) and uiState==0:
 #scene.drawtext("Pirate slot machine",font,384,8,512,64)
 for i in range(5):
  scene.setPosition(icons[i],0, 32*(i+1),200,96.5)
 #scene.setPosition(white,0, 0,0,100)
 print("before text")
 scene.drawtext("press up and down to change\nmenu option",font,384,96,512,104)
 scene.drawtext("play",font,448,416,464,424)
 scene.drawtext("quit",font,448,472,464,480)
 scene.drawtext("Odds to get all 3 slots is 4%",font,32,640,96,672)
 scene.drawtext("Odds to get at least 2 slots is 48%",font,32,704,96,736)
 print("after text")

elif uiTimer<=20 and uiState==0:
 print("before text1")
 scene.drawtext("Pirate Slot Machine",font,384,8,512,64)
 print("after text")
elif uiState==-1 and uiTimer>250:
 uiState=0
 uiTimer=40
 dotState=0
 determined=0
 winState=0
 recovered=1
print("ui stuff over")



if input.getKey('KEY_UP'):
 if uiState==0 : dotState=0
if input.getKey('KEY_DOWN'):
 if uiState==0 : dotState=1
print("checked for input")

if input.getKey('KEY_ESCAPE'):
 #if  dotState==0:
  uiState=1
  uiTimer=100
  print("there")
 #if dotState==1:
  print("herASDAe")
print("here")

if dotState==0:
 scene.setPosition(dot,0, -24,-8,97.5)
elif dotState==1:
 scene.setPosition(dot,0, -24,-16,97.5)
else:
 scene.setPosition(dot,0, -24,-16,100000000.5)
print("after dot")



print("uiTimer:"+str(uiTimer))
if uiState==1:
 print("before actual game")
 scene.setPosition(white,0, 0,0,110)
 if not determined:
  ######################randomness is not time seeded, results in the same numbers each time
  iconChoice=[randint(0,4),randint(0,4),randint(0,4)]
  determined=1
  uiTimer=100
 winState= int(iconChoice[0]==iconChoice[1]) + int(iconChoice[0]==iconChoice[2]) + int(iconChoice[1]==iconChoice[2])
 for i in range(3):
  image.set_texture(icons[i], textures[iconChoice[i]])
 if uiTimer>140 and iconOrder==0 :
  scene.setPosition(icons[0],0, -64,32,90)
  iconOrder+=1
 elif uiTimer>160 and iconOrder==1:
  scene.setPosition(icons[1],0, 0,32,90)
  iconOrder+=1
 elif uiTimer>170 and iconOrder==2:
  scene.setPosition(icons[2],0, 64,32,90)
  iconOrder+=1
 elif iconOrder==3:
  uiState=-1
  recovered=0


if recovered==0 and uiTimer<250:

  if winState==0:
   scene.drawtext("LOSER",font,384,704,448,736)
   print("loser")
  elif winState==1:
   scene.drawtext("GOOD JOB",font,384,704,448,736)
   print("good job")
  else:
   scene.drawtext("WINNER",font,384,704,448,736)
   print("winner")
