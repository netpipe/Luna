/// @mainpage Recast Navigation
/// 
/// @note A documentation effort is currently underway. 
/// This documentation is in a draft state until the effort is complete.
/// 
/// @section intro_recast Recast
/// 
/// Recast is state of the art navigation mesh construction toolset for 
/// games.
///
/// - It is <b>automatic</b>, which means that you can throw any level 
///   geometry at it and you will get robust mesh out.
/// - It is <b>fast</b> which means swift turnaround times for level 
///   designers.
/// - It is <b>open source</b> so it comes with full source and you can 
///   customize it to your hearts content.
///
///  The Library is free for commercial use and open source under the 
///  ZLib License.
/// 
/// <b>Please use the latest version from the 
/// <a href="http://code.google.com/p/recastnavigation/">SVN</a>.</b>
///
/// @image html recast_intro.png 
/// 
/// The Recast process starts with constructing a voxel mold from a level 
/// geometry and then casting a navigation mesh over it. The process 
/// consists of three steps, building the voxel mold, partitioning the 
/// mold into simple regions, peeling off the regions as simple polygons.
/// 
/// -# The voxel mold is build from the input triangle mesh by 
///    rasterizing the triangles into a multi-layer heightfield. Some 
///    simple filters are then applied to the mold to prune out locations 
///    where the character would not be able to move.
/// -# The walkable areas described by the mold are divided into simple 
///    overlayed 2D regions. The resulting regions have only one 
///    non-overlapping contour, which simplifies the final step of the 
///    process tremendously.
/// -# The navigation polygons are peeled off from the regions by first 
///    tracing the boundaries and then simplifying them. The resulting 
///    polygons are finally converted to convex polygons which makes them 
///    perfect for pathfinding and spatial reasoning about the level. 
/// 
/// @section intro_detour Detour
///
/// Recast is accompanied by Detour, a path-finding and spatial reasoning 
/// toolkit. You can use any navigation mesh with Detour, but of course 
/// the data generated by Recast fits perfectly. 
///
/// Detour offers a simple static navigation mesh that is suitable for 
/// many simple cases, as well as a tiled navigation mesh that allows you 
/// to add and remove pieces of the mesh. The tiled mesh allows you to 
/// create systems where you stream new navigation data in and out as 
/// the player progresses the level, or regenerate tiles as the 
/// world changes. 
///
/// You can discuss and give feedback for Recast and Detour in the 
/// <a href="http://groups.google.com/group/recastnavigation">
/// discussion group</a>.
///