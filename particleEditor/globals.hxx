#ifndef GLOBALS_H
#define GLOBALS_H

#ifdef _WIN32
  #include <windows.h>
  #define VC_EXTRALEAN
  #define WIN32_LEAN_AND_MEAN
#endif

#include <irrlicht.h>
#include <memory.h>
#include <string.h>

using namespace irr;

using namespace core;
using namespace scene;
using namespace video;
using namespace io;
using namespace gui;

enum MENU
{
  MENU_NULL = 21546,

	MENU_FILE,
	MENU_VIEW,
	MENU_HELP,

  //! File submenu.
  MENU_LOAD_ENV,
  MENU_FILE_SAVE_CPP,
  MENU_FILE_QUIT,

  //! Edit submenu.
  MENU_EDIT_SHOW_TOOLBOX,
  MENU_EDIT_SHOW_EMITTER_LIST,
  MENU_EDIT_SHOW_SETTINGS,

  MENU_HELP_USAGE,

  IRR_WINDOW_TOOLBOX,
  IRR_WINDOW_EMITTER_LIST,
  IRR_WINDOW_SETTINGS,
  IRR_WINDOW_HELP,
	IRR_WINDOW_HELP_LIST,

  IRR_WINDOW_USER_INPUT,
  IRR_EDITBOX_USER_INPUT,

  IRR_TOOLBOX_COMBO_BOX_PRESETS,
  IRR_TOOLBOX_COMBO_BOX_MATERIAL_TYPE,
  IRR_TOOLBOX_LIST_BOX_EMITTER_LIST,

  IRR_TOOLBOX_BUTTON_ADD_PRESET,
  IRR_TOOLBOX_BUTTON_SAVE_PRESETS,
  IRR_TOOLBOX_BUTTON_LOAD_PRESETS,

  IRR_TOOLBOX_EDITBOX_PRESET_NAME,

  IRR_TOOLBOX_EMITTER_MIN_COLOR_R_COMPONENT,
  IRR_TOOLBOX_EMITTER_MIN_COLOR_G_COMPONENT,
  IRR_TOOLBOX_EMITTER_MIN_COLOR_B_COMPONENT,

  IRR_TOOLBOX_EMITTER_MAX_COLOR_R_COMPONENT,
  IRR_TOOLBOX_EMITTER_MAX_COLOR_G_COMPONENT,
  IRR_TOOLBOX_EMITTER_MAX_COLOR_B_COMPONENT,

  IRR_TOOLBOX_EMITTER_BOX_WIDTH,
  IRR_TOOLBOX_EMITTER_BOX_HEIGHT,
  IRR_TOOLBOX_EMITTER_BOX_LENGTH,

  IRR_TOOLBOX_EMITTER_DIRECTION_X,
  IRR_TOOLBOX_EMITTER_DIRECTION_Y,
  IRR_TOOLBOX_EMITTER_DIRECTION_Z,

  IRR_TOOLBOX_EMITTER_PARTICLES_MIN,
  IRR_TOOLBOX_EMITTER_PARTICLES_MAX,

  IRR_TOOLBOX_EMITTER_PARTICLES_LIFE_MIN,
  IRR_TOOLBOX_EMITTER_PARTICLES_LIFE_MAX,

  IRR_TOOLBOX_EMITTER_PARTICLES_ANGLE,

  IRR_TOOLBOX_EMITTER_CONFIRM_UPDATE_EMITTER,
  IRR_TOOLBOX_EMITTER_CONFIRM_NEW_EMITTER,

  IRR_TOOLBOX_PARTICLE_SCALE_X,
  IRR_TOOLBOX_PARTICLE_SCALE_Y,
  IRR_TOOLBOX_PARTICLE_SCALE_Z,

  IRR_TOOLBOX_PARTICLE_SIZE_X,
  IRR_TOOLBOX_PARTICLE_SIZE_Y,

  IRR_TOOLBOX_PARTICLE_POSITION_X,
  IRR_TOOLBOX_PARTICLE_POSITION_Y,
  IRR_TOOLBOX_PARTICLE_POSITION_Z,

  IRR_TOOLBOX_PARTICLE_TEXTURE_BTN,

  //! Affector.
  IRR_TOOLBOX_AFFECTOR_FADEOUT_TARGET_COLOR_R,
  IRR_TOOLBOX_AFFECTOR_FADEOUT_TARGET_COLOR_G,
  IRR_TOOLBOX_AFFECTOR_FADEOUT_TARGET_COLOR_B,

  IRR_TOOLBOX_AFFECTOR_FADEOUT_TIME,

  IRR_TOOLBOX_AFFECTOR_GRAVITY_X,
  IRR_TOOLBOX_AFFECTOR_GRAVITY_Y,
  IRR_TOOLBOX_AFFECTOR_GRAVITY_Z,

  IRR_TOOLBOX_AFFECTOR_TIME_FORCE_LOST,

  //! Environment editboxes, used in settings window.
  IRR_TOOLBOX_ENV_POSITION_X,
  IRR_TOOLBOX_ENV_POSITION_Y,
  IRR_TOOLBOX_ENV_POSITION_Z,
  IRR_TOOLBOX_ENV_ROTATION_X,
  IRR_TOOLBOX_ENV_ROTATION_Y,
  IRR_TOOLBOX_ENV_ROTATION_Z,
  IRR_TOOLBOX_ENV_SCALE_X,
  IRR_TOOLBOX_ENV_SCALE_Y,
  IRR_TOOLBOX_ENV_SCALE_Z,

  //! Camera speed settings.
  IRR_SETTINGS_CAM_MAYA_SPEED_ROTATION,
  IRR_SETTINGS_CAM_MAYA_SPEED_ZOOM,
  IRR_SETTINGS_CAM_MAYA_SPEED_TRANSLATE,

  //! Cursor settings.
  IRR_SETTINGS_CURSOR_POS_X,
  IRR_SETTINGS_CURSOR_POS_Y,
  IRR_SETTINGS_CURSOR_POS_Z,

  IRR_SETTINGS_CURSOR_ROT_X,
  IRR_SETTINGS_CURSOR_ROT_Y,
  IRR_SETTINGS_CURSOR_ROT_Z,

  IRR_SETTINGS_CURSOR_SCL_X,
  IRR_SETTINGS_CURSOR_SCL_Y,
  IRR_SETTINGS_CURSOR_SCL_Z,

  IRR_SETTINGS_CURSOR_OFFSET_X,
  IRR_SETTINGS_CURSOR_OFFSET_Y,
  IRR_SETTINGS_CURSOR_OFFSET_Z,

  //! User input string window.
  IRR_INPUT_USER_STRING_EMITTER_NAME,
  IRR_INPUT_USER_STRING_SAVE_CPP_NAME,

  //! GUI Settings.
  IRR_SETTINGS_GUI_ALPHA,

  //! Emitter list controls.
  IRR_EMITTER_LIST_DELETE_EMITTER_BTN

};

enum CAMERA
{
  CAMERA_STYLE_FPS = 64645484,
  CAMERA_STYLE_MAYA
};

enum
{
  USER_INPUT_STRING_TYPE_EMITTER_NAME = 173496,
  USER_INPUT_STRING_TYPE_SAVE_CPP
};

struct PARTICLE_EMITTER
{
  aabbox3d<f32> emitterBox;
  vector3df   direction;
  u32         minParticlesPerSecond;
  u32         maxParticlesPerSecond;
  SColor      minStartColor;
  SColor      maxStartColor;
  u32         lifeTimeMin;
  u32         lifeTimeMax;
  s32         maxAngleDegrees;
};

struct PARTICLE
{
  vector3df position;
  vector3df scale;
  dimension2d<f32> size;
  E_MATERIAL_TYPE materialType;
};

struct PARTICLE_AFFECTOR
{
  //! Holds variables for both gravity and fade out.
  SColor targetColor;
  u32 timeNeededToFadeOut;

  vector3df gravity;
  u32 timeForceLost;
};

struct PRESET
{
  PARTICLE_EMITTER  emitter;
  PARTICLE          particle;
  PARTICLE_AFFECTOR affector;
  wchar_t           *presetName;
  stringc           texture;
};


/*
#define SCOLOR_DARKGRAY   SColor(255,64,64,64)
*/
#define SCOLOR_BLACK      SColor(255,0,0,0)
#define SCOLOR_WHITE      SColor(255,255,255,255)

#define SCOLOR_LIGHTGRAY  SColor(255,191,205,213)
#define SCOLOR_MIDGRAY    SColor(255,115,145,162)
#define SCOLOR_DARKGRAY   SColor(255,54,71,82)

#define MAXSTRING 256

#define PATH_SKYBOX "./textures/skybox/"
#define PATH_ENV    "./scenery/"

#endif // GLOBALS_H
